/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/_dashboard'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardDashboardRouteImport } from './routes/_dashboard/dashboard'
import { Route as DashboardAccountRouteImport } from './routes/_dashboard/account'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as DashboardCoursesIndexRouteImport } from './routes/_dashboard/courses/index'
import { Route as DashboardCoursesGameRouteImport } from './routes/_dashboard/courses/_game'
import { Route as DashboardCoursesGameCourseIndexRouteImport } from './routes/_dashboard/courses/_game/$course/index'
import { Route as DashboardCoursesGameCoursePlaygroundRouteImport } from './routes/_dashboard/courses/_game/$course/playground'

const DashboardCoursesRouteImport = createFileRoute('/_dashboard/courses')()

const DashboardRoute = DashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardCoursesRoute = DashboardCoursesRouteImport.update({
  id: '/courses',
  path: '/courses',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardDashboardRoute = DashboardDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAccountRoute = DashboardAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => DashboardRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const DashboardCoursesIndexRoute = DashboardCoursesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardCoursesRoute,
} as any)
const DashboardCoursesGameRoute = DashboardCoursesGameRouteImport.update({
  id: '/_game',
  getParentRoute: () => DashboardCoursesRoute,
} as any)
const DashboardCoursesGameCourseIndexRoute =
  DashboardCoursesGameCourseIndexRouteImport.update({
    id: '/$course/',
    path: '/$course/',
    getParentRoute: () => DashboardCoursesGameRoute,
  } as any)
const DashboardCoursesGameCoursePlaygroundRoute =
  DashboardCoursesGameCoursePlaygroundRouteImport.update({
    id: '/$course/playground',
    path: '/$course/playground',
    getParentRoute: () => DashboardCoursesGameRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginRoute
  '/account': typeof DashboardAccountRoute
  '/dashboard': typeof DashboardDashboardRoute
  '/courses': typeof DashboardCoursesGameRouteWithChildren
  '/courses/': typeof DashboardCoursesIndexRoute
  '/courses/$course/playground': typeof DashboardCoursesGameCoursePlaygroundRoute
  '/courses/$course': typeof DashboardCoursesGameCourseIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginRoute
  '/account': typeof DashboardAccountRoute
  '/dashboard': typeof DashboardDashboardRoute
  '/courses': typeof DashboardCoursesIndexRoute
  '/courses/$course/playground': typeof DashboardCoursesGameCoursePlaygroundRoute
  '/courses/$course': typeof DashboardCoursesGameCourseIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_dashboard': typeof DashboardRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_dashboard/account': typeof DashboardAccountRoute
  '/_dashboard/dashboard': typeof DashboardDashboardRoute
  '/_dashboard/courses': typeof DashboardCoursesRouteWithChildren
  '/_dashboard/courses/_game': typeof DashboardCoursesGameRouteWithChildren
  '/_dashboard/courses/': typeof DashboardCoursesIndexRoute
  '/_dashboard/courses/_game/$course/playground': typeof DashboardCoursesGameCoursePlaygroundRoute
  '/_dashboard/courses/_game/$course/': typeof DashboardCoursesGameCourseIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/account'
    | '/dashboard'
    | '/courses'
    | '/courses/'
    | '/courses/$course/playground'
    | '/courses/$course'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/account'
    | '/dashboard'
    | '/courses'
    | '/courses/$course/playground'
    | '/courses/$course'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_dashboard'
    | '/_auth/login'
    | '/_dashboard/account'
    | '/_dashboard/dashboard'
    | '/_dashboard/courses'
    | '/_dashboard/courses/_game'
    | '/_dashboard/courses/'
    | '/_dashboard/courses/_game/$course/playground'
    | '/_dashboard/courses/_game/$course/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/courses': {
      id: '/_dashboard/courses'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof DashboardCoursesRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/dashboard': {
      id: '/_dashboard/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/account': {
      id: '/_dashboard/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof DashboardAccountRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_dashboard/courses/': {
      id: '/_dashboard/courses/'
      path: '/'
      fullPath: '/courses/'
      preLoaderRoute: typeof DashboardCoursesIndexRouteImport
      parentRoute: typeof DashboardCoursesRoute
    }
    '/_dashboard/courses/_game': {
      id: '/_dashboard/courses/_game'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof DashboardCoursesGameRouteImport
      parentRoute: typeof DashboardCoursesRoute
    }
    '/_dashboard/courses/_game/$course/': {
      id: '/_dashboard/courses/_game/$course/'
      path: '/$course'
      fullPath: '/courses/$course'
      preLoaderRoute: typeof DashboardCoursesGameCourseIndexRouteImport
      parentRoute: typeof DashboardCoursesGameRoute
    }
    '/_dashboard/courses/_game/$course/playground': {
      id: '/_dashboard/courses/_game/$course/playground'
      path: '/$course/playground'
      fullPath: '/courses/$course/playground'
      preLoaderRoute: typeof DashboardCoursesGameCoursePlaygroundRouteImport
      parentRoute: typeof DashboardCoursesGameRoute
    }
  }
}

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface DashboardCoursesGameRouteChildren {
  DashboardCoursesGameCoursePlaygroundRoute: typeof DashboardCoursesGameCoursePlaygroundRoute
  DashboardCoursesGameCourseIndexRoute: typeof DashboardCoursesGameCourseIndexRoute
}

const DashboardCoursesGameRouteChildren: DashboardCoursesGameRouteChildren = {
  DashboardCoursesGameCoursePlaygroundRoute:
    DashboardCoursesGameCoursePlaygroundRoute,
  DashboardCoursesGameCourseIndexRoute: DashboardCoursesGameCourseIndexRoute,
}

const DashboardCoursesGameRouteWithChildren =
  DashboardCoursesGameRoute._addFileChildren(DashboardCoursesGameRouteChildren)

interface DashboardCoursesRouteChildren {
  DashboardCoursesGameRoute: typeof DashboardCoursesGameRouteWithChildren
  DashboardCoursesIndexRoute: typeof DashboardCoursesIndexRoute
}

const DashboardCoursesRouteChildren: DashboardCoursesRouteChildren = {
  DashboardCoursesGameRoute: DashboardCoursesGameRouteWithChildren,
  DashboardCoursesIndexRoute: DashboardCoursesIndexRoute,
}

const DashboardCoursesRouteWithChildren =
  DashboardCoursesRoute._addFileChildren(DashboardCoursesRouteChildren)

interface DashboardRouteChildren {
  DashboardAccountRoute: typeof DashboardAccountRoute
  DashboardDashboardRoute: typeof DashboardDashboardRoute
  DashboardCoursesRoute: typeof DashboardCoursesRouteWithChildren
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAccountRoute: DashboardAccountRoute,
  DashboardDashboardRoute: DashboardDashboardRoute,
  DashboardCoursesRoute: DashboardCoursesRouteWithChildren,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
