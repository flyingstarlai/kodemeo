/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as TeacherRouteImport } from './routes/_teacher'
import { Route as StudentRouteImport } from './routes/_student'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TeacherEnrollmentsRouteImport } from './routes/_teacher/enrollments'
import { Route as TeacherDashboardRouteImport } from './routes/_teacher/dashboard'
import { Route as TeacherAccountRouteImport } from './routes/_teacher/account'
import { Route as StudentStudentRouteImport } from './routes/_student/student'
import { Route as AuthRegisterRouteImport } from './routes/_auth/register'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as TeacherAssignmentsIndexRouteImport } from './routes/_teacher/assignments/index'
import { Route as StudentCoursesIndexRouteImport } from './routes/_student/courses/index'
import { Route as TeacherAssignmentsCourseRouteImport } from './routes/_teacher/assignments/$course'
import { Route as StudentCoursesGameRouteImport } from './routes/_student/courses/_game'
import { Route as AuthStudentLoginRouteImport } from './routes/_auth/student.login'
import { Route as StudentCoursesGameCourseIndexRouteImport } from './routes/_student/courses/_game/$course/index'
import { Route as StudentCoursesGameCoursePlayRouteImport } from './routes/_student/courses/_game/$course/play'

const StudentCoursesRouteImport = createFileRoute('/_student/courses')()

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const TeacherRoute = TeacherRouteImport.update({
  id: '/_teacher',
  getParentRoute: () => rootRouteImport,
} as any)
const StudentRoute = StudentRouteImport.update({
  id: '/_student',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const StudentCoursesRoute = StudentCoursesRouteImport.update({
  id: '/courses',
  path: '/courses',
  getParentRoute: () => StudentRoute,
} as any)
const TeacherEnrollmentsRoute = TeacherEnrollmentsRouteImport.update({
  id: '/enrollments',
  path: '/enrollments',
  getParentRoute: () => TeacherRoute,
} as any)
const TeacherDashboardRoute = TeacherDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => TeacherRoute,
} as any)
const TeacherAccountRoute = TeacherAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => TeacherRoute,
} as any)
const StudentStudentRoute = StudentStudentRouteImport.update({
  id: '/student',
  path: '/student',
  getParentRoute: () => StudentRoute,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const TeacherAssignmentsIndexRoute = TeacherAssignmentsIndexRouteImport.update({
  id: '/assignments/',
  path: '/assignments/',
  getParentRoute: () => TeacherRoute,
} as any)
const StudentCoursesIndexRoute = StudentCoursesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => StudentCoursesRoute,
} as any)
const TeacherAssignmentsCourseRoute =
  TeacherAssignmentsCourseRouteImport.update({
    id: '/assignments/$course',
    path: '/assignments/$course',
    getParentRoute: () => TeacherRoute,
  } as any)
const StudentCoursesGameRoute = StudentCoursesGameRouteImport.update({
  id: '/_game',
  getParentRoute: () => StudentCoursesRoute,
} as any)
const AuthStudentLoginRoute = AuthStudentLoginRouteImport.update({
  id: '/student/login',
  path: '/student/login',
  getParentRoute: () => AuthRoute,
} as any)
const StudentCoursesGameCourseIndexRoute =
  StudentCoursesGameCourseIndexRouteImport.update({
    id: '/$course/',
    path: '/$course/',
    getParentRoute: () => StudentCoursesGameRoute,
  } as any)
const StudentCoursesGameCoursePlayRoute =
  StudentCoursesGameCoursePlayRouteImport.update({
    id: '/$course/play',
    path: '/$course/play',
    getParentRoute: () => StudentCoursesGameRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/student': typeof StudentStudentRoute
  '/account': typeof TeacherAccountRoute
  '/dashboard': typeof TeacherDashboardRoute
  '/enrollments': typeof TeacherEnrollmentsRoute
  '/student/login': typeof AuthStudentLoginRoute
  '/courses': typeof StudentCoursesGameRouteWithChildren
  '/assignments/$course': typeof TeacherAssignmentsCourseRoute
  '/courses/': typeof StudentCoursesIndexRoute
  '/assignments': typeof TeacherAssignmentsIndexRoute
  '/courses/$course/play': typeof StudentCoursesGameCoursePlayRoute
  '/courses/$course': typeof StudentCoursesGameCourseIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/student': typeof StudentStudentRoute
  '/account': typeof TeacherAccountRoute
  '/dashboard': typeof TeacherDashboardRoute
  '/enrollments': typeof TeacherEnrollmentsRoute
  '/student/login': typeof AuthStudentLoginRoute
  '/courses': typeof StudentCoursesIndexRoute
  '/assignments/$course': typeof TeacherAssignmentsCourseRoute
  '/assignments': typeof TeacherAssignmentsIndexRoute
  '/courses/$course/play': typeof StudentCoursesGameCoursePlayRoute
  '/courses/$course': typeof StudentCoursesGameCourseIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_student': typeof StudentRouteWithChildren
  '/_teacher': typeof TeacherRouteWithChildren
  '/about': typeof AboutRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/_student/student': typeof StudentStudentRoute
  '/_teacher/account': typeof TeacherAccountRoute
  '/_teacher/dashboard': typeof TeacherDashboardRoute
  '/_teacher/enrollments': typeof TeacherEnrollmentsRoute
  '/_auth/student/login': typeof AuthStudentLoginRoute
  '/_student/courses': typeof StudentCoursesRouteWithChildren
  '/_student/courses/_game': typeof StudentCoursesGameRouteWithChildren
  '/_teacher/assignments/$course': typeof TeacherAssignmentsCourseRoute
  '/_student/courses/': typeof StudentCoursesIndexRoute
  '/_teacher/assignments/': typeof TeacherAssignmentsIndexRoute
  '/_student/courses/_game/$course/play': typeof StudentCoursesGameCoursePlayRoute
  '/_student/courses/_game/$course/': typeof StudentCoursesGameCourseIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/login'
    | '/register'
    | '/student'
    | '/account'
    | '/dashboard'
    | '/enrollments'
    | '/student/login'
    | '/courses'
    | '/assignments/$course'
    | '/courses/'
    | '/assignments'
    | '/courses/$course/play'
    | '/courses/$course'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/login'
    | '/register'
    | '/student'
    | '/account'
    | '/dashboard'
    | '/enrollments'
    | '/student/login'
    | '/courses'
    | '/assignments/$course'
    | '/assignments'
    | '/courses/$course/play'
    | '/courses/$course'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_student'
    | '/_teacher'
    | '/about'
    | '/_auth/login'
    | '/_auth/register'
    | '/_student/student'
    | '/_teacher/account'
    | '/_teacher/dashboard'
    | '/_teacher/enrollments'
    | '/_auth/student/login'
    | '/_student/courses'
    | '/_student/courses/_game'
    | '/_teacher/assignments/$course'
    | '/_student/courses/'
    | '/_teacher/assignments/'
    | '/_student/courses/_game/$course/play'
    | '/_student/courses/_game/$course/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  StudentRoute: typeof StudentRouteWithChildren
  TeacherRoute: typeof TeacherRouteWithChildren
  AboutRoute: typeof AboutRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_teacher': {
      id: '/_teacher'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof TeacherRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_student': {
      id: '/_student'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof StudentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_student/courses': {
      id: '/_student/courses'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof StudentCoursesRouteImport
      parentRoute: typeof StudentRoute
    }
    '/_teacher/enrollments': {
      id: '/_teacher/enrollments'
      path: '/enrollments'
      fullPath: '/enrollments'
      preLoaderRoute: typeof TeacherEnrollmentsRouteImport
      parentRoute: typeof TeacherRoute
    }
    '/_teacher/dashboard': {
      id: '/_teacher/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof TeacherDashboardRouteImport
      parentRoute: typeof TeacherRoute
    }
    '/_teacher/account': {
      id: '/_teacher/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof TeacherAccountRouteImport
      parentRoute: typeof TeacherRoute
    }
    '/_student/student': {
      id: '/_student/student'
      path: '/student'
      fullPath: '/student'
      preLoaderRoute: typeof StudentStudentRouteImport
      parentRoute: typeof StudentRoute
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_teacher/assignments/': {
      id: '/_teacher/assignments/'
      path: '/assignments'
      fullPath: '/assignments'
      preLoaderRoute: typeof TeacherAssignmentsIndexRouteImport
      parentRoute: typeof TeacherRoute
    }
    '/_student/courses/': {
      id: '/_student/courses/'
      path: '/'
      fullPath: '/courses/'
      preLoaderRoute: typeof StudentCoursesIndexRouteImport
      parentRoute: typeof StudentCoursesRoute
    }
    '/_teacher/assignments/$course': {
      id: '/_teacher/assignments/$course'
      path: '/assignments/$course'
      fullPath: '/assignments/$course'
      preLoaderRoute: typeof TeacherAssignmentsCourseRouteImport
      parentRoute: typeof TeacherRoute
    }
    '/_student/courses/_game': {
      id: '/_student/courses/_game'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof StudentCoursesGameRouteImport
      parentRoute: typeof StudentCoursesRoute
    }
    '/_auth/student/login': {
      id: '/_auth/student/login'
      path: '/student/login'
      fullPath: '/student/login'
      preLoaderRoute: typeof AuthStudentLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_student/courses/_game/$course/': {
      id: '/_student/courses/_game/$course/'
      path: '/$course'
      fullPath: '/courses/$course'
      preLoaderRoute: typeof StudentCoursesGameCourseIndexRouteImport
      parentRoute: typeof StudentCoursesGameRoute
    }
    '/_student/courses/_game/$course/play': {
      id: '/_student/courses/_game/$course/play'
      path: '/$course/play'
      fullPath: '/courses/$course/play'
      preLoaderRoute: typeof StudentCoursesGameCoursePlayRouteImport
      parentRoute: typeof StudentCoursesGameRoute
    }
  }
}

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthStudentLoginRoute: typeof AuthStudentLoginRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthStudentLoginRoute: AuthStudentLoginRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface StudentCoursesGameRouteChildren {
  StudentCoursesGameCoursePlayRoute: typeof StudentCoursesGameCoursePlayRoute
  StudentCoursesGameCourseIndexRoute: typeof StudentCoursesGameCourseIndexRoute
}

const StudentCoursesGameRouteChildren: StudentCoursesGameRouteChildren = {
  StudentCoursesGameCoursePlayRoute: StudentCoursesGameCoursePlayRoute,
  StudentCoursesGameCourseIndexRoute: StudentCoursesGameCourseIndexRoute,
}

const StudentCoursesGameRouteWithChildren =
  StudentCoursesGameRoute._addFileChildren(StudentCoursesGameRouteChildren)

interface StudentCoursesRouteChildren {
  StudentCoursesGameRoute: typeof StudentCoursesGameRouteWithChildren
  StudentCoursesIndexRoute: typeof StudentCoursesIndexRoute
}

const StudentCoursesRouteChildren: StudentCoursesRouteChildren = {
  StudentCoursesGameRoute: StudentCoursesGameRouteWithChildren,
  StudentCoursesIndexRoute: StudentCoursesIndexRoute,
}

const StudentCoursesRouteWithChildren = StudentCoursesRoute._addFileChildren(
  StudentCoursesRouteChildren,
)

interface StudentRouteChildren {
  StudentStudentRoute: typeof StudentStudentRoute
  StudentCoursesRoute: typeof StudentCoursesRouteWithChildren
}

const StudentRouteChildren: StudentRouteChildren = {
  StudentStudentRoute: StudentStudentRoute,
  StudentCoursesRoute: StudentCoursesRouteWithChildren,
}

const StudentRouteWithChildren =
  StudentRoute._addFileChildren(StudentRouteChildren)

interface TeacherRouteChildren {
  TeacherAccountRoute: typeof TeacherAccountRoute
  TeacherDashboardRoute: typeof TeacherDashboardRoute
  TeacherEnrollmentsRoute: typeof TeacherEnrollmentsRoute
  TeacherAssignmentsCourseRoute: typeof TeacherAssignmentsCourseRoute
  TeacherAssignmentsIndexRoute: typeof TeacherAssignmentsIndexRoute
}

const TeacherRouteChildren: TeacherRouteChildren = {
  TeacherAccountRoute: TeacherAccountRoute,
  TeacherDashboardRoute: TeacherDashboardRoute,
  TeacherEnrollmentsRoute: TeacherEnrollmentsRoute,
  TeacherAssignmentsCourseRoute: TeacherAssignmentsCourseRoute,
  TeacherAssignmentsIndexRoute: TeacherAssignmentsIndexRoute,
}

const TeacherRouteWithChildren =
  TeacherRoute._addFileChildren(TeacherRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  StudentRoute: StudentRouteWithChildren,
  TeacherRoute: TeacherRouteWithChildren,
  AboutRoute: AboutRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
